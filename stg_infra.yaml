
cloud_provider: azure
subscription_id: <<Please Provide>>
tenant_id: <<Please Provide>>
client_id: <<Please Provide>>
client_secret: <<Please Provide>>
location: canadacentral

log:
  analytics_workspace:
    location: canadacentral
    sku: PerGB2018
    name: stg-aks-canadacentral

## OPTIONAL: Terraform persisting state in remote storage
backend:
  enabled: true
  container_name: k8s-bootstrap
  resource_group_name: k8s-bootstrap
  storage_account_name: k8sbootstrap31479
  access_key:

ssh:
  user: ubuntu
# When not provided (commented) they'll be created by the script.
# private_key: ./id_rsa
# public_key: ./id_rsa.pub

aks:
  cluster_name: aks-cluster
  resource_group_name: aks-stg
  k8s_version: 1.17.13
  network:
    name: aks-network
    cidr:
      - 10.240.0.0/16
  subnet:
    name: aks-subnet
    cidr:
      - 10.240.1.0/24

  default_node_pool:
    name: "default"
    node_count: 6
    vm_size: "Standard_D8s_v3"
    zones: [1, 2, 3]
    auto_scaling:
        enabled:  false
        min_count: null
        max_count: null
  additional_node_pools:
    - name: pool2
      node_count: 6
      vm_size: "Standard_D8s_v3"
      zones: [1, 2, 3]
      node_os: "Linux"
      taints: ["ad=true:NoSchedule"]
      auto_scaling:
        enabled:  false
        min_count: null
        max_count: null
    - name: pool3
      node_count: 3
      vm_size: "Standard_D8s_v3"
      zones: [1, 2, 3]
      node_os: "Linux"
      taints: ["kafka=true:NoSchedule"]
      auto_scaling:
        enabled:  false
        min_count: null
        max_count: null

vertica:
  resource_group_name: vertica-stg
  flavor: Standard_E16s_v3
  node_count: 3
  bkp_disk_size: 1023
  disk_size: 3069
  network:
    name: vertica-network
    cidr:
      - 10.10.0.0/16
  subnet:
    name: vertica-subnet
    cidr:
      - 10.10.1.0/24
  #Fixed Vertica Load Balancer static IP (in vertica subnet)
  lb_static_ip: 10.10.1.15

data_science:
  enabled: true
  flavor: Standard_E16s_v3
  disk_size: 1023